<Hint Limits="Limits" />

@if (Player is not null)
{
    <p>@Player, tocca a te!</p>
}

<MudNumericField @ref="_betField" Required="true" Label="Scommetti" @bind-Value=_bet OnKeyUp="Bet" Min="Limits.Min + 1" Max="Limits.Max - 1" />


@code {
    [Parameter]
    public Player? Player { get; set; }

    [Parameter, EditorRequired]
    public required Limits Limits { get; set; }

    [Parameter, EditorRequired]
    public required Func<int, bool> CheckFunc { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<int> OnContinue { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<Player> OnEnd { get; set; }

    private int _bet;

    private MudNumericField<int>? _betField;

    private async Task Bet(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            var lost = CheckFunc.Invoke(_bet);
            if (lost)
            {
                await OnEnd.InvokeAsync(Player);
            }
            else
            {
                await _betField!.SelectAsync();
                await OnContinue.InvokeAsync(_bet);
            }
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }
}